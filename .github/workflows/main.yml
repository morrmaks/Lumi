name: CI & Docker Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ci-${{ github.ref}}
  cancel-in-progress: true

jobs:
  test-lint-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v3

      - name: Starting Node.js ${{matrix.node-version}}
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node-version}}

      - name: Install backend dependencies
        run: cd backend && npm ci

      - name: Backend build
        run: cd backend && npm run build

      - name: Install frontend dependencies
        run: cd frontend && npm ci

      - name: Frontend lint
        run: cd frontend && npm run lint:ts

      - name: Frontend build
        run: cd frontend && npm run build:prod

  build-and-push-docker:
    needs: test-lint-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push frontend
        run: |
          docker build \
            --build-arg BASE_API="${{ secrets.BASE_API }}" \
            --build-arg YA_SUGGEST_API_KEY=${{ secrets.YA_SUGGEST_API_KEY }} \
            -t ${{ secrets.DOCKER_USERNAME }}/lumi-frontend ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/lumi-frontend

      - name: Build and push backend
        run: |
          docker build \
            -t ${{ secrets.DOCKER_USERNAME }}/lumi-backend ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/lumi-backend

      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: "${{ secrets.SERVER_IP }}"
          username: "${{ secrets.SERVER_USER }}"
          key: "${{ secrets.SERVER_SSH_KEY }}"
          script: |
            docker compose -f lumi-docker-compose.yml pull
            docker compose -f lumi-docker-compose.yml down
            docker compose -f lumi-docker-compose.yml up -d --remove-orphans --force-recreate
